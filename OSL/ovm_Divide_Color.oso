OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -o /home/omar-vm/houdini-ovm/OSL/ovm_Divide_Color.oso
shader ovm_Divide_Color
param	color	input1	1 1 1		%read{0,0} %write{2147483647,-1}
param	color	input2	0 0 0		%read{0,0} %write{2147483647,-1}
oparam	color	resultRGB	1 1 1		%read{1,3} %write{0,0}
oparam	float	resultR	1		%read{2147483647,-1} %write{1,1}
oparam	float	resultG	1		%read{2147483647,-1} %write{2,2}
oparam	float	resultB	1		%read{2147483647,-1} %write{3,3}
const	int	$const1	0		%read{1,1} %write{2147483647,-1}
const	int	$const2	1		%read{2,2} %write{2147483647,-1}
const	int	$const3	2		%read{3,3} %write{2147483647,-1}
code ___main___
# houdini-ovm/OSL/ovm_Divide_Color.osl:13
#     resultR = resultRGB[0];
	div		resultRGB input1 input2 	%filename{"houdini-ovm/OSL/ovm_Divide_Color.osl"} %line{13} %argrw{"wrr"}
# houdini-ovm/OSL/ovm_Divide_Color.osl:14
#     resultG = resultRGB[1];
	compref		resultR resultRGB $const1 	%line{14} %argrw{"wrr"}
# houdini-ovm/OSL/ovm_Divide_Color.osl:15
#     resultB = resultRGB[2];
	compref		resultG resultRGB $const2 	%line{15} %argrw{"wrr"}
# houdini-ovm/OSL/ovm_Divide_Color.osl:16
# }
	compref		resultB resultRGB $const3 	%line{16} %argrw{"wrr"}
	end
